VIDEO 320x200;
MAPFILE <TEST.WMP>;
BIND <TEST.WDL>;
NEXUS 50;
CLIP_DIST 100;

PALETTE MAINPAL{
	PALFILE <PALETTE.PCX>;
	FLAGS AUTORANGE;
}

BMAP WALLBMP, <WALL.PCX>;

TEXTURE WALLTEX {
	SCALE_XY 16, 16;
	BMAPS WALLBMP;
	ALBEDO 1.0;
}

BMAP GREENBMP, <GREEN.PCX>;

TEXTURE GREENTEX {
	SCALE_XY 16, 16;
	BMAPS GREENBMP;
}

OVLY HANDBMP, <HAND.PCX>;

OVERLAY HANDOVERLAY {
	OVLYS HANDBMP;
	POS_X 220;
	POS_Y 136;
}

OVLY CROSSHAIRBMP, <CROSSH~1.PCX>;

OVERLAY CROSSHAIROVERLAY {
	OVLYS CROSSHAIRBMP;
	POS_X 152;
	POS_Y 92;
}

TEXTURE NULLTEX {
	SCALE_XY 16, 16;
	BMAPS WALLBMP;
}

REGION BORDERREGION {
	FLOOR_HGT 0;
	CEIL_HGT 0;
	FLOOR_TEX NULLTEX;
	CEIL_TEX NULLTEX;
	CLIP_DIST 0;
}

REGION MAINREGION {
	FLOOR_HGT 0;
	CEIL_HGT 10;
	FLOOR_TEX GREENTEX;
	CEIL_TEX GREENTEX;
}

REGION COLUMNREGION {
	FLOOR_HGT 5;
	CEIL_HGT 10;
	FLOOR_TEX GREENTEX;
	CEIL_TEX GREENTEX;
}

WALL MAINWALL {
	TEXTURE WALLTEX;
}

SKILL PLAYER_TILT { MIN -1.35; MAX 1.35; }
SKILL MICKEY_MUL {}
SKILL SPEED { MIN -4; MAX 4; }
SKILL STRAFE { MIN -4; MAX 4; }
SKILL VZ {}
SKILL WEAPON_WAVE {}
SKILL ANGLE { }
SKILL TILT { MIN -1.35; MAX 1.35; }
SKILL RECOIL { MIN -1.0; MAX 1.0; }

ACTION MOVE {
		# MOUSE LOOK X
		RULE MICKEY_MUL = -MICKEY_X * 0.01;
		ADD ANGLE, MICKEY_MUL;

		# MOUSE LOOK Y
		RULE MICKEY_MUL = MICKEY_Y * 0.01;
		ADD TILT, MICKEY_MUL;
	
		RULE PLAYER_ANGLE = ANGLE;
		RULE PLAYER_TILT = TILT - RECOIL;
		
		# WEAPON WAVE
		RULE WEAPON_WAVE = WEAPON_WAVE + (PLAYER_SPEED * 0.1);
		
		# RECOIL
		IF (MOUSE_LEFT) {
			RULE RECOIL = RECOIL + 0.01 + RANDOM(0.01);
		}
		
		IF_ABOVE RECOIL, 0.0;
			RULE RECOIL = RECOIL - 0.1 * TIME_CORR;

		# IF PLAYER IS GROUNDED
		IF (PLAYER_HGT <= 0.0) 
		{
			# KEEP PLAYER IN GROUNDs
			RULE VZ = -PLAYER_HGT;

			# SPEED AND STRAFE ACCELERATION
			IF_EQUAL KEY_W, 1;
				ADDT SPEED, 0.3;
			IF_EQUAL KEY_S, 1;
				ADDT SPEED, -0.3;
			IF_EQUAL KEY_A, 1;
				ADDT STRAFE, -0.3;
			IF_EQUAL KEY_D, 1;
				ADDT STRAFE, 0.3;

			# SPEED AND STRAFE FRICTION
			IF_NEQUAL SPEED, 0.0;
				RULE SPEED = SPEED * (1.0 - 0.4 * TIME_CORR);
			IF_NEQUAL STRAFE, 0.0;
				RULE STRAFE = STRAFE * (1.0 - 0.4 * TIME_CORR);

			# JUMP
			IF_EQUAL, KEY_SPACE, 1;
				SET VZ, 0.5;
		} 
		ELSE # IF PLAYER IS NOT GROUNDED
		{
			# GRAVITY
			ADDT VZ, -0.2;

			# SPEED AND STRAFE ACCELERATION
			IF_EQUAL KEY_W, 1;
				ADDT SPEED, 0.1;
			IF_EQUAL KEY_S, 1;
				ADDT SPEED, -0.1;
			IF_EQUAL KEY_A, 1;
				ADDT STRAFE, -0.1;
			IF_EQUAL KEY_D, 1;
				ADDT STRAFE, 0.1;
		}

		# UPDATE PLAYER VELOCITY
		RULE PLAYER_VY = SIN(PLAYER_ANGLE) * SPEED - COS(PLAYER_ANGLE) * STRAFE;
		RULE PLAYER_VX = COS(PLAYER_ANGLE) * SPEED + SIN(PLAYER_ANGLE) * STRAFE;
		RULE PLAYER_VZ = VZ * TIME_CORR;

		RULE HANDOVERLAY.POS_X = 220 + SIN(WEAPON_WAVE) * 10.0;
		RULE HANDOVERLAY.POS_Y = 146 - COS(WEAPON_WAVE) * 10.0;

		LOCATE;
}

ACTION START {
	SET MOUSE_CALM, 1;
	SET MOUSE_MODE, 2;
	SET LIGHT_DIST, 6;
	SET PLAYER_LIGHT, 10;
    	SET PLAYER_ARC,	1.5;
	SET PLAYER_HGT, 0.0;
	SET PLAYER_SIZE, 3.0;
	SET PLAYER_CLIMB, 1.5;
	SET LAYERS.1, HANDOVERLAY;
	SET HANDOVERLAY.VISIBLE, 1;
	SET LAYERS.2, CROSSHAIROVERLAY;
	SET CROSSHAIROVERLAY.VISIBLE, 1;
	SET EACH_TICK.1, MOVE;
}

IF_START START;
